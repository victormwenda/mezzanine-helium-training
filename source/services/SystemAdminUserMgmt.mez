unit SystemAdminUserMgmt;

SystemAdmin [] systemAdmins;
SystemAdmin selectedSystemAdmin;
SystemAdmin formSystemAdmin;
SystemAdmin [] filteredUsers;

bool editing; //flag to check if form is being edited


// Create a list of all system admins
void init(){

   systemAdmins = SystemAdmin:all();//   <- Get all items
   //systemAdmins = SystemAdmin:equals(deleted, false); //Get non deleted items
    
   formSystemAdmin = SystemAdmin:new();
}

//View a clicked user dtails on user details view
DSL_VIEWS viewUser() {
    return DSL_VIEWS.SystemAdminUserDetails;
}

//handle click of the back button
DSL_VIEWS back() {
    return DSL_VIEWS.SystemAdminUserMgmt;
}


//persist a new user 
DSL_VIEWS saveUser() {
    
    formSystemAdmin.deleted = false;
    formSystemAdmin.save();

    //This is a new user, send notification SMS and Email
    if (editing == false ) {
        formSystemAdmin.invite(formSystemAdmin.mobileNumber); //send SMS invite
        formSystemAdmin.invite(formSystemAdmin.emailAddress); //send email invite
    }

    
    init();

    return null;

}

//Edit user
void editUser() {
 editing = true;
}

//Delete user
DSL_VIEWS removeUser() {

    if(selectedSystemAdmin == SystemAdmin:user()){
        Mez:alert("alert.currently_logged_in");
        return null;
    }



    //SystemAdmin:delete(selectedSystemAdmin); - Delete completely
    selectedSystemAdmin.deleted = true; //set user deleted to true

    //remove user role
    selectedSystemAdmin.removeRole();

    init();
    return null;
}


unit SystemAdminUserMgmt;

// Declare an array/collection of objects with square brackets after the type:
SystemAdmin[] systemAdmins;
SystemAdmin formSystemAdmin;

SystemAdmin selectedSystemAdmin;

bool editing;

void init() {
	systemAdmins = SystemAdmin:equals(deleted, false);
	formSystemAdmin = SystemAdmin:new();
	editing = false;
}

// The DSL_VIEWS enum is automatically generated by Helium. The enum members
// are in the form of DSL_VIEWS.YourViewFileName. Typically this is used for
// navigation.

DSL_VIEWS viewUser() {
	return DSL_VIEWS.SystemAdminUserDetails;
}

DSL_VIEWS back() {
	return DSL_VIEWS.SystemAdminUserMgmt;
}

DSL_VIEWS backToUserMgmtMenu() {
	return DSL_VIEWS.UserMgmtMenu;
}

DSL_VIEWS saveUser() {
	formSystemAdmin.deleted = false;
	formSystemAdmin.save();
	if (editing == false) {
		formSystemAdmin.invite(formSystemAdmin.mobileNumber);
	}
	// Whether we're done inviting or editing, reset it back to the default
	// non-editing mode with the editing=false contained within init()
	init();
	return null;
}

DSL_VIEWS editUser() {
	editing = true;
	return null;
}

DSL_VIEWS removeUser() {
	if (selectedSystemAdmin == SystemAdmin:user()) {
		Mez:alertError("alert.currently_logged_in");
	} else {
		selectedSystemAdmin.deleted = true;
		selectedSystemAdmin.removeRole();
	}
	init();
	return null;
}
